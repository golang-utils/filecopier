// Code generated by counterfeiter. DO NOT EDIT.
package filecopier

import (
	"sync"
)

type Fake struct {
	OSStub        func(srcPath string, dstPath string) (err error)
	oSMutex       sync.RWMutex
	oSArgsForCall []struct {
		srcPath string
		dstPath string
	}
	oSReturns struct {
		result1 error
	}
	oSReturnsOnCall map[int]struct {
		result1 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *Fake) OS(srcPath string, dstPath string) (err error) {
	fake.oSMutex.Lock()
	ret, specificReturn := fake.oSReturnsOnCall[len(fake.oSArgsForCall)]
	fake.oSArgsForCall = append(fake.oSArgsForCall, struct {
		srcPath string
		dstPath string
	}{srcPath, dstPath})
	fake.recordInvocation("OS", []interface{}{srcPath, dstPath})
	fake.oSMutex.Unlock()
	if fake.OSStub != nil {
		return fake.OSStub(srcPath, dstPath)
	}
	if specificReturn {
		return ret.result1
	}
	return fake.oSReturns.result1
}

func (fake *Fake) OSCallCount() int {
	fake.oSMutex.RLock()
	defer fake.oSMutex.RUnlock()
	return len(fake.oSArgsForCall)
}

func (fake *Fake) OSArgsForCall(i int) (string, string) {
	fake.oSMutex.RLock()
	defer fake.oSMutex.RUnlock()
	return fake.oSArgsForCall[i].srcPath, fake.oSArgsForCall[i].dstPath
}

func (fake *Fake) OSReturns(result1 error) {
	fake.OSStub = nil
	fake.oSReturns = struct {
		result1 error
	}{result1}
}

func (fake *Fake) OSReturnsOnCall(i int, result1 error) {
	fake.OSStub = nil
	if fake.oSReturnsOnCall == nil {
		fake.oSReturnsOnCall = make(map[int]struct {
			result1 error
		})
	}
	fake.oSReturnsOnCall[i] = struct {
		result1 error
	}{result1}
}

func (fake *Fake) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.oSMutex.RLock()
	defer fake.oSMutex.RUnlock()
	return fake.invocations
}

func (fake *Fake) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ FileCopier = new(Fake)
